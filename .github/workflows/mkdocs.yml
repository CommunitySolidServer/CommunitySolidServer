name: mkdocs
on:
  push:
    branches:
      - main
    paths:
      - documentation/**
    tags:
      - 'v*'
      - '!v*.*'

jobs:
  typedocs:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '16.x'
      - run: npm ci --ignore-scripts
      - run: npm run typedocs
      - name: Save docs
        uses: actions/upload-artifact@v3
        with:
          name: typedocs
          path: docs
          retention-days: 1

  mkdocs:
    runs-on: ubuntu-latest
    outputs:
      major: ${{ steps.tagged_version.outputs.major || steps.current_version.ouputs.major }}
    steps:
      - uses: actions/checkout@v2
      - if: startsWith(github.ref, 'refs/tags/v')
        name: "Get newly tagged version"
        id: tagged_version
        uses: battila7/get-version-action@v2
      - if: github.ref == 'refs/heads/main'
        name: "Get current version"
        id: current_version
        run: |
          VERSION=$(git show origin/main:package.json | jq -r .version | grep -Po '^(\d+)').x
          echo "::set-output name=major::$VERSION"
      - uses: actions/setup-python@v4
        with:
          python-version: 3.x
      - run: pip install mkdocs-material
      - run: pip install mike
      - run: git config user.name ci-bot
      - run: git config user.email ci-bot@example.com
      - run: git fetch origin gh-pages --depth=1
      - run: |
          cd documentation && mike deploy --push --update-aliases \
            ${{ steps.tagged_version.outputs.major || steps.current_version.outputs.major }}.x latest

  publish-typedocs:
    needs:
      - mkdocs
      - typedocs
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: typedocs
          path: docs
      - id: get_version
        uses: battila7/get-version-action@v2
      - uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs
          destination_dir:  ${{ needs.mkdocs.outputs.major }}.x/docs
