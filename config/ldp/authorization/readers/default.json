{
  "@context": [
    "https://linkedsoftwaredependencies.org/bundles/npm/@solid/community-server/^7.0.0/components/context.jsonld",
    "https://linkedsoftwaredependencies.org/bundles/npm/asynchronous-handlers/^1.0.0/components/context.jsonld"
  ],
  "import": [
    "css:config/ldp/authorization/readers/ownership.json"
  ],
  "@graph": [
    {
      "comment": "Caches permissions based on credentials and requested modes. Does not cache the input object itself as that object might be created in different places",
      "@id": "urn:solid-server:default:PermissionReader",
      "@type": "CachedHandler",
      "fields": [ "credentials", "requestedModes" ],
      "source": {
        "comment": "Requests permissions on subject resources for auxiliary resources.",
        "@type": "AuxiliaryReader",
        "auxiliaryStrategy": { "@id": "urn:solid-server:default:AuxiliaryStrategy" },
        "reader":
        {
          "comment": "This PermissionReader will be used to prevent external access to containers used for internal storage.",
          "@id": "urn:solid-server:default:PathBasedReader",
          "@type": "PathBasedReader",
          "baseUrl": { "@id": "urn:solid-server:default:variable:baseUrl" },
          "defaultReader": {
            "comment": [
              "Reinterprets Control permissions as Read/Write on the auth resource.",
              "The config that determines the authorization strategy needs to set the `authStrategy` and `reader` fields of this object."
            ],
            "@id": "urn:solid-server:default:AuthAuxiliaryReader",
            "@type": "AuthAuxiliaryReader",
            "reader": {
              "@id": "urn:solid-server:default:OwnerPermissionReader",
              "@type": "OwnerPermissionReader",
              "reader": {
                "comment": "Makes sure the necessary read permissions are checked when deleting non-existent resources.",
                "@id": "urn:solid-server:default:ReadDeleteReader",
                "@type": "ReadDeleteReader",
                "resourceSet": { "@id": "urn:solid-server:default:CachedResourceSet" },
                "identifierStrategy": { "@id": "urn:solid-server:default:IdentifierStrategy" }
              }
            }
          }
        }
      }
    }
  ]
}
